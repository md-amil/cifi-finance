<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheets/css/mobile.css">
    <link rel="stylesheet" type="text/css" href="/stylesheets/css/main-sifi.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/css/styleguide.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/css/globals.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/css/mobile.css" />
    <title>SiFi Finance</title>
    <style>
        .next-particle {
            display: none;
        }
    </style>

</head>

<body>
   
  <div class="main-sifi screen" >
    <div style="background-color: var(--sazerac); width: 100%;">
      <div class="container">
        <nav class="navbar navbar-expand-lg navbar-light bg-light bg-transparent px-0 pt-4">
          <a class="navbar-brand" href="#">SiFi Finance</a>
          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
        
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
              <!-- <li class="nav-item active">
                <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
              </li> -->
             
            </ul>
            <form class="form-inline my-2 my-lg-0">
              <button id = 'connect-btn' class="btn btn-primary">
                Connect Wallet
              </button>
            </form>
          </div>
        </nav>
      </div>
   
      <div class="container spacer">
        <div class="group-23 ">
          <div class="group-15">
            <div class="group-14">
              <h1 class="easiest-way-to-invest-in-crypto">Easiest way to earn in crypto</h1>
              <div class="instantly-invest-in lead">
                Instantly invest in custom crypto baskets, Curated portfolios, and more. Be smart, start investing
                now!
              </div>
            </div>
            <div class="frame-container">
              
              <div class="frame-5 btn-shadow-h">
                <div class="private-sale-live inter-semi-bold-white-16px">PRIVATE SALE LIVE</div>
                <img
                  class="biarrow-right"
                  src="https://anima-uploads.s3.amazonaws.com/projects/629c4e52edc2c70ee79e9bd6/releases/629c4e61edc2c70ee79e9bd7/img/bi-arrow-right-3@2x.svg"
                />
              </div>
            </div>
          </div>
          <div class="overlap-group1">
            <img src="./img/home-img.png" style="margin-top: -50px;" alt="">
        </div>
      </div>
    
    </div>
    </div>

    
    <div style="background-color: var(--green-white);"  class="spacer por">
      <svg width="0" height="0" display="none" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <symbol id="shape-offercarousel-background-shape-bottom" viewbox="0 0 1920 81.6">
            <path fill="var(--sazerac)">
              <animate attributeName="d" dur="5000ms" repeatCount="indefinite" keyTimes="0;.1;.25;.4;.6;.75;1" 
              values="M0,.4v-1H1920V1.2C1732.6,45.2,1394.8,81,963.2,81,441,80.9,121.1,28.5,0,.4Z;
                                                                                                      M0,.4v-1H1920V1.2C1622.43,15.74,1394.8,81,963.2,81,441,80.9,121.1,28.5,0,.4Z;
                                                                                                      M0,.4v-1H1920V1.2C1474.91,0,1391.57,28.65,965.43,62.7,430.13,99.09,312.74,69.74,0,.4Z;
                                                                                                                  M0,.4v-1H1920V1.2c-445.09-1.2-558.84-4.92-1009.74,11C372.61,31.22,312.74,69.74,0,.4Z;
                                                                                                                  M0,.4v-1H1920V1.2c-104.65,73.23-372.3,80.5-945.17,46.23C425-.7,198.87,5.17,0,.4Z;
                                                                                                         M0,.4v-1H1920V1.2c-313.61,72.06-502.61,80.5-954.57,61.5C427.92,40.09,340.91,0,0,.4Z;
                                                                                                               M0,.4v-1H1920V1.2C1732.6,45.2,1394.8,81,963.2,81,441,80.9,121.1,28.5,0,.4Z" />
            </path>
          </symbol>
        </defs>
      </svg>
      <svg class="background-shape-bottom" width="1920px" height="81.71px" aria-hidden="true">
        <use xlink:href="#shape-offercarousel-background-shape-bottom"></use>
      </svg>
      <div class="container mt-5">
        <div class="token-item-groups mx-auto" style="width: 55%;">
          <div class="participate-in-the-s">Participate In the SiFi Token Private Sale</div>
          <div class="group-9">
            <div class="form-group">
              <input id = 'amount-input' type="number"class="dropdown-selector form-control" placeholder="Enter BUSD Amount">
            </div>
          
            <div class="frame-container-1">
              <div id = "buy-btn" class="frame-5-1 btn-shadow-h buy-now">
                  <div class="raleway-semi-bold-white-16px">BUY NOW</div>
                  <img
                  class="biarrow-right"
                  src="https://anima-uploads.s3.amazonaws.com/projects/629c4e52edc2c70ee79e9bd6/releases/629c4e61edc2c70ee79e9bd7/img/bi-arrow-right-1@2x.svg"
                />
               </div>
               <div class="inv-button text-center">
                <button id = "enable-busd" class="btn btn-primary mr-3">Enable BUSD</button>
                <button id = "swap" disabled class="btn btn-outline-primary disabled" >Swap</button>
              </div>
  
           
             
              </div>
            </div>
          
          </div>
          <div class="group-19">
            <div class="frame-8 border-1px-violet-red-2">
              <!-- <div class="to-pay-2356-bnb">
                <span class="notosans-normal-black-21px">To pay: </span><span class="span1">23.56 BNB</span>
              </div> -->
              <div class="you-get-435684-sifi notosans-normal-black-21px">You get: 
              </span><span id="u-get" class="span1">0</span> SiFi
               </div>
            </div>
            <p id = "connected-label" class="web3-wallet-not-con raleway-normal-storm-dust-12px">
              *Web3 wallet not connected. Open this site in Trust wallet or Metamask dApp browser.
            </p>
          </div>
          <div class="group-10 mx-auto">
            <div class="overlap-group2">
              <div class="current-rate-1-sifi-00125-usdt">Current Rate<br />1 SiFi = 0.0125 BUSD</div>
              <div class="button-1">
                <div class="base-button-1 mt-3">
                  <div class="button_text-1 raleway-semi-bold-violet-red-16px">Click to view Rates</div>
                  <div class="overlap-group">
                   
                    <img
                      class="arrow-right"
                      src="https://anima-uploads.s3.amazonaws.com/projects/629c4e52edc2c70ee79e9bd6/releases/629c4e61edc2c70ee79e9bd7/img/arrow-right@2x.svg"
                    />
                  </div>
                </div>
              </div>
            </div>
            <ul class="bullet-list">
                <li>Minimum buy= 125 BUSD, Maximum= 6250</li>
                <li>Total Token supply: 1,000,000,000 SiFi</li>
                <li>Tokens allocated for
                  Private Sale: 190,000,000 SiFi</li>
                  <li>Note: Earn referral rewards in BUSD by inviting</li>
                  <li>your friends to buy SiFi tokens.</li>
              </ul>
            
           
          </div>
        </div>
      </div>

      <div style="background-color: var(--green-white);"  class="spacer por">
   
        <div class="container">
          <div class="token-item-groups mx-auto" style="width: 55%;">
            <div class="participate-in-the-s">Invite Link Generator</div>
            <div class="group-9">
              <div class="form-group">
                <input id = "address-link" type="text" class="dropdown-selector form-control" placeholder="Enter Your BSC Address (BEP-20 type)">
              </div>
            
              <div class="frame-container-1" style="width: 100%;">
                 <div class="text-center" style="display: flex; justify-content: center; width: 100%;">
                  <button id="get-link" class="btn btn-primary mr-3">Get Link</button>
                  <button id="copy-link" class="btn btn-outline-primary" >Copy</button>
                </div>
                </div>
              </div>
              <div id = 'link'></div>
              <div class="group-10 mx-auto mt-2">
                <ul class="bullet-list">
                    <li>get 5% referral reward for every successful invite</li>
                    <li>For example, your friend buys 1000 Sifi Coin then your recieve 50 Sifi Coin</li>
                  </ul>
              </div>
            
            </div>
         
          </div>
        
  
        </div>
    </div>
  </div>
    <!-- 
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="/javascripts/js/jQuery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
    <script src="/javascripts/js/nextparticle.min.js"></script>
    <script src="/javascripts/js/bootstrap.min.js"></script>
    <script src="/javascripts/js/splitting.js"></script>
    <script src="/javascripts/js/bootstrap.min.js"></script>
    <script src="/javascripts/js/scroll-out.js"></script>
    <script src="/javascripts/js/controller.js"></script>-->
    <!-- <script src="/javascripts/js/main.js"></script>  -->
    <!-- <script src="/javascripts/js/metamask.js"></script>  -->
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
    <script>
        const connectBtn = document.getElementById('connect-btn');
        const buyBtn = document.getElementById('buy-btn');
        const swapBtn = document.getElementById('swap')
        const amountInput = document.getElementById('amount-input');
        const addInput = document.getElementById('address-link');
        const getLinkBtn = document.getElementById('get-link');
        const copyLinkBtn = document.getElementById('copy-link');
        const link = document.getElementById('link');
        const uGet = document.getElementById('u-get')
        const label = document.getElementById('connected-label')
        const enableBusdBtn = document.getElementById('enable-busd');
        let walletAddress;
        let web3;
        const abi = [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint8",
                                "name": "version",
                                "type": "uint8"
                            }
                        ],
                        "name": "Initialized",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "BUSD",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_referrer",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "buy",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_tokenAddress",
                                "type": "address"
                            }
                        ],
                        "name": "initialize",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "referralStore",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "tokenAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_transferTo",
                                "type": "address"
                            }
                        ],
                        "name": "withdrawBNB",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_tokenAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_transferTo",
                                "type": "address"
                            }
                        ],
                        "name": "withdrawToken",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ];
        const busdABI =[
                {
                    constant: false,
                    inputs: [],
                    name: "disregardProposeOwner",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "name",
                    outputs: [{ name: "", type: "string" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [
                        { name: "_spender", type: "address" },
                        { name: "_value", type: "uint256" },
                    ],
                    name: "approve",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "assetProtectionRole",
                    outputs: [{ name: "", type: "address" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "totalSupply",
                    outputs: [{ name: "", type: "uint256" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [
                        { name: "r", type: "bytes32[]" },
                        { name: "s", type: "bytes32[]" },
                        { name: "v", type: "uint8[]" },
                        { name: "to", type: "address[]" },
                        { name: "value", type: "uint256[]" },
                        { name: "fee", type: "uint256[]" },
                        { name: "seq", type: "uint256[]" },
                        { name: "deadline", type: "uint256[]" },
                    ],
                    name: "betaDelegatedTransferBatch",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [
                        { name: "sig", type: "bytes" },
                        { name: "to", type: "address" },
                        { name: "value", type: "uint256" },
                        { name: "fee", type: "uint256" },
                        { name: "seq", type: "uint256" },
                        { name: "deadline", type: "uint256" },
                    ],
                    name: "betaDelegatedTransfer",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [
                        { name: "_from", type: "address" },
                        { name: "_to", type: "address" },
                        { name: "_value", type: "uint256" },
                    ],
                    name: "transferFrom",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [],
                    name: "initializeDomainSeparator",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "decimals",
                    outputs: [{ name: "", type: "uint8" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [],
                    name: "unpause",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "unfreeze",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [],
                    name: "claimOwnership",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_newSupplyController", type: "address" }],
                    name: "setSupplyController",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "paused",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "balanceOf",
                    outputs: [{ name: "", type: "uint256" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [],
                    name: "initialize",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [],
                    name: "pause",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "getOwner",
                    outputs: [{ name: "", type: "address" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [{ name: "target", type: "address" }],
                    name: "nextSeqOf",
                    outputs: [{ name: "", type: "uint256" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_newAssetProtectionRole", type: "address" }],
                    name: "setAssetProtectionRole",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "freeze",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "owner",
                    outputs: [{ name: "", type: "address" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "symbol",
                    outputs: [{ name: "", type: "string" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_newWhitelister", type: "address" }],
                    name: "setBetaDelegateWhitelister",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_value", type: "uint256" }],
                    name: "decreaseSupply",
                    outputs: [{ name: "success", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "isWhitelistedBetaDelegate",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [
                        { name: "_to", type: "address" },
                        { name: "_value", type: "uint256" },
                    ],
                    name: "transfer",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "whitelistBetaDelegate",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_proposedOwner", type: "address" }],
                    name: "proposeOwner",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_value", type: "uint256" }],
                    name: "increaseSupply",
                    outputs: [{ name: "success", type: "bool" }],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "betaDelegateWhitelister",
                    outputs: [{ name: "", type: "address" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "proposedOwner",
                    outputs: [{ name: "", type: "address" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "unwhitelistBetaDelegate",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [
                        { name: "_owner", type: "address" },
                        { name: "_spender", type: "address" },
                    ],
                    name: "allowance",
                    outputs: [{ name: "", type: "uint256" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "wipeFrozenAddress",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "EIP712_DOMAIN_HASH",
                    outputs: [{ name: "", type: "bytes32" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [{ name: "_addr", type: "address" }],
                    name: "isFrozen",
                    outputs: [{ name: "", type: "bool" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: true,
                    inputs: [],
                    name: "supplyController",
                    outputs: [{ name: "", type: "address" }],
                    payable: false,
                    stateMutability: "view",
                    type: "function",
                },
                {
                    constant: false,
                    inputs: [],
                    name: "reclaimBUSD",
                    outputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "function",
                },
                {
                    inputs: [],
                    payable: false,
                    stateMutability: "nonpayable",
                    type: "constructor",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "from", type: "address" },
                        { indexed: true, name: "to", type: "address" },
                        { indexed: false, name: "value", type: "uint256" },
                    ],
                    name: "Transfer",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "owner", type: "address" },
                        { indexed: true, name: "spender", type: "address" },
                        { indexed: false, name: "value", type: "uint256" },
                    ],
                    name: "Approval",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "currentOwner", type: "address" },
                        { indexed: true, name: "proposedOwner", type: "address" },
                    ],
                    name: "OwnershipTransferProposed",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [{ indexed: true, name: "oldProposedOwner", type: "address" }],
                    name: "OwnershipTransferDisregarded",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "oldOwner", type: "address" },
                        { indexed: true, name: "newOwner", type: "address" },
                    ],
                    name: "OwnershipTransferred",
                    type: "event",
                },
                { anonymous: false, inputs: [], name: "Pause", type: "event" },
                { anonymous: false, inputs: [], name: "Unpause", type: "event" },
                {
                    anonymous: false,
                    inputs: [{ indexed: true, name: "addr", type: "address" }],
                    name: "AddressFrozen",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [{ indexed: true, name: "addr", type: "address" }],
                    name: "AddressUnfrozen",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [{ indexed: true, name: "addr", type: "address" }],
                    name: "FrozenAddressWiped",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "oldAssetProtectionRole", type: "address" },
                        { indexed: true, name: "newAssetProtectionRole", type: "address" },
                    ],
                    name: "AssetProtectionRoleSet",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "to", type: "address" },
                        { indexed: false, name: "value", type: "uint256" },
                    ],
                    name: "SupplyIncreased",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "from", type: "address" },
                        { indexed: false, name: "value", type: "uint256" },
                    ],
                    name: "SupplyDecreased",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "oldSupplyController", type: "address" },
                        { indexed: true, name: "newSupplyController", type: "address" },
                    ],
                    name: "SupplyControllerSet",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "from", type: "address" },
                        { indexed: true, name: "to", type: "address" },
                        { indexed: false, name: "value", type: "uint256" },
                        { indexed: false, name: "seq", type: "uint256" },
                        { indexed: false, name: "fee", type: "uint256" },
                    ],
                    name: "BetaDelegatedTransfer",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [
                        { indexed: true, name: "oldWhitelister", type: "address" },
                        { indexed: true, name: "newWhitelister", type: "address" },
                    ],
                    name: "BetaDelegateWhitelisterSet",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [{ indexed: true, name: "newDelegate", type: "address" }],
                    name: "BetaDelegateWhitelisted",
                    type: "event",
                },
                {
                    anonymous: false,
                    inputs: [{ indexed: true, name: "oldDelegate", type: "address" }],
                    name: "BetaDelegateUnwhitelisted",
                    type: "event",
                },
            ];
        connectBtn.addEventListener('click',()=>initWeb3(window.ethereum))
        enableBusdBtn.addEventListener('click',()=>enableBusd())
        swapBtn.addEventListener('click',()=>doTransaction())
        amountInput.addEventListener('input',()=>{
            $('.buy-now').hide()
            uGet.innerText = amountInput.value/ 0.0125 
             $('.inv-button').show();

        })
        getLinkBtn.addEventListener('click',()=>{
            addInput.value
           const l = `sifi.finance/referral?start=${addInput.value}`
           link.innerText = l.slice(0,42)+'...'
        //    console.log(link)
        })
async function enableBusd(){
    const amount = amountInput.value;
    if (amount == '') return alert('Please enter amount ')
    if (amount > 6250) return alert('Please enter amount less than 6250')
    if (walletAddress.length < 1) return alert('Please connect to your wallet')
    const busdContract = new web3.eth.Contract(
        busdABI,
        "0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee"
    );
    console.log(walletAddress[0])
    console.log(busdContract)
    try{
        const res = await busdContract.methods.approve(walletAddress[0], amount).send({from: walletAddress[0]})
        enableBusdBtn.disabled = true
        swapBtn.disabled = false
    }catch(e){
        console.log(e)

    }
    // 

}
async function doTransaction(provider) {

    const privateSaleContract = new web3.eth.Contract(
        abi,
        "0x157657c8a45b1D2B4319E81d9053536691A7e2a0"
    );
    const targetAddress = '0x0000000000000000000000000000000000000000'
    await privateSaleContract.methods.buy(targetAddress, amountInput.value * 10 ** 8).send({
        from: walletAddress[0],
        // value: 
    });
    web3.eth.sendTransaction({
    from: walletAddress[0],
    to: '0xdFe8b397CCe34B9F678f7c66Dc1a58bb05AC9407',
    value: web3.utils.toWei(amount, 'ether'),
    chainId:97
    }, function (error, result) {
    if (!error) {
        alert('success');
    } else {
       alert(error)
    }
    })
		
}
// $(document).ready(function () {
// 	$("#referrer-address").html(targetAddress);
// });
async function initWeb3(provider) {
	if (provider) {
		try {
			await provider.request({ method: "eth_requestAccounts" });
            web3 = new Web3(provider);
            walletAddress = await web3.eth.getAccounts();
            if(walletAddress.length > 0){
                connectBtn.innerText = walletAddress[0].substr(0, 6)+"..."+walletAddress[0].substr(walletAddress[0].length - 4);
                label.innerText = ''
            }
		} catch (err) {
            console.log(err)
		}
	}
}

window.addEventListener("load", async () => {
	if (window.ethereum) {
		initWeb3(window.ethereum);
	} else {
        alert('Please install MetaMask')
		// $("#status").html("No Metamask (or other Web3 Provider) installed");
	}
});
      $('.inv-button').hide();
      $('.buy-now').click(function() {
        $(this).hide();
       $('.inv-button').toggle();
      })
    </script>



    </script>
    <!-- <script src="/javascripts/js/metamask.js"></script> -->
</body>

</html>

<!-- // var myEl = document.getElementById("buynowButton");
// myEl.addEventListener("click", async function () {
// doTransaction(window.ethereum);
// });
// // var claimButton = document.getElementById("claimButton");
// // claimButton.addEventListener("click", async function () {
// // if (!targetAddress) {
// // swal("Error", "Referral Code is Required", "error");
// // }
// // console.log("claim =========================== ");
// // var referral_code = "<%- JSON.stringify(referral) %>";
    // // console.log(targetAddress, "<<<<<<<<<<<<<<<<<<<<"); // // window.location.href=//
        // "https://t.me/dpadFinanceAirdrop_bot?start=" + targetAddress; // // }); -->